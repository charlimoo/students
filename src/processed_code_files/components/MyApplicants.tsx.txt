// start of components/MyApplicants.tsx
import React, { useState } from 'react';
import { Button } from './ui/button';
import { Input } from './ui/input';
import { Label } from './ui/label';
import { Card, CardContent, CardHeader, CardTitle } from './ui/card';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from './ui/select';
import { Badge } from './ui/badge';
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from './ui/table';
import { 
  Search,
  Filter,
  Eye,
  Users,
  FileText,
  Calendar,
  Flag,
  ArrowLeft,
  Download,
  RefreshCw
} from 'lucide-react';

interface MyApplicantsProps {
  onBack: () => void;
  onViewApplication: (applicationId: string) => void;
}

const mockApplicants = [
  { id: 'APL-2024-001', studentName: 'Ahmad Hassan', nationality: 'Syria', applicationType: 'New Admission', submissionDate: '2024-01-15', status: 'approved', email: 'ahmad.hassan@email.com', program: 'Computer Science - Masters' },
  { id: 'APL-2024-002', studentName: 'Fatima Al-Zahra', nationality: 'Iraq', applicationType: 'Visa Extension', submissionDate: '2024-01-14', status: 'under-review', email: 'fatima.zahra@email.com', program: 'Engineering - Bachelor' },
  { id: 'APL-2024-003', studentName: 'Mohammed Abdullah', nationality: 'Jordan', applicationType: 'New Admission', submissionDate: '2024-01-12', status: 'requires-action', email: 'mohammed.abdullah@email.com', program: 'Business Administration - Masters' },
];

const statusOptions = [
  { value: 'all', label: 'All Status' },
  { value: 'approved', label: 'Approved' },
  { value: 'under-review', label: 'Under Review' },
  { value: 'requires-action', label: 'Requires Action' },
  { value: 'rejected', label: 'Rejected' }
];

export function MyApplicants({ onBack, onViewApplication }: MyApplicantsProps) {
  const [searchTerm, setSearchTerm] = useState('');
  const [statusFilter, setStatusFilter] = useState('all');
  const [isLoading, setIsLoading] = useState(false);

  const filteredApplicants = mockApplicants.filter(applicant => {
    const matchesSearch = applicant.studentName.toLowerCase().includes(searchTerm.toLowerCase()) || applicant.id.toLowerCase().includes(searchTerm.toLowerCase());
    const matchesStatus = statusFilter === 'all' || applicant.status === statusFilter;
    return matchesSearch && matchesStatus;
  });

  const getStatusBadge = (status: string) => {
    const statusConfig: Record<string, {label: string, className: string}> = {
      'approved': { label: 'Approved', className: 'status-badge-approved' },
      'under-review': { label: 'Under Review', className: 'status-badge-review' },
      'requires-action': { label: 'Requires Action', className: 'status-badge-pending' },
      'rejected': { label: 'Rejected', className: 'status-badge-rejected' }
    };
    const config = statusConfig[status] || { label: status, className: 'bg-muted text-muted-foreground' };
    return <Badge className={config.className}>{config.label}</Badge>;
  };

  const formatDate = (dateString: string) => new Date(dateString).toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' });
  const handleRefresh = () => { setIsLoading(true); setTimeout(() => setIsLoading(false), 1000); };

  return (
    <div className="flex-1 overflow-auto p-8" dir="rtl">
        <div className="mb-8">
            <h1 className="text-3xl text-foreground persian-heading">همه متقاضیان ثبت شده</h1>
            <p className="text-muted-foreground">مدیریت و بررسی درخواست‌های دانشجویان ثبت شده توسط موسسه شما</p>
        </div>

        <Card className="card-modern mb-8">
          <CardHeader><CardTitle>فیلتر و جستجو</CardTitle></CardHeader>
          <CardContent>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div className="space-y-2">
                <Label>فیلتر بر اساس وضعیت</Label>
                <Select value={statusFilter} onValueChange={setStatusFilter}>
                  <SelectTrigger><SelectValue /></SelectTrigger>
                  <SelectContent>{statusOptions.map(o => <SelectItem key={o.value} value={o.value}>{o.label}</SelectItem>)}</SelectContent>
                </Select>
              </div>
              <div className="space-y-2">
                <Label>جستجو بر اساس نام یا شماره درخواست</Label>
                <Input value={searchTerm} onChange={(e) => setSearchTerm(e.target.value)} placeholder="جستجو..." />
              </div>
            </div>
          </CardContent>
        </Card>

        <Card className="card-modern">
          <CardHeader>
            <div className="flex justify-between items-center">
                <CardTitle>لیست متقاضیان ({filteredApplicants.length})</CardTitle>
                <Button variant="outline" size="sm" onClick={handleRefresh} disabled={isLoading}>
                    <RefreshCw className={`w-4 h-4 ml-2 ${isLoading ? 'animate-spin' : ''}`} /> بروزرسانی
                </Button>
            </div>
          </CardHeader>
          <CardContent>
            <div className="overflow-x-auto">
              <Table>
                <TableHeader><TableRow><TableHead>نام دانشجو</TableHead><TableHead>ملیت</TableHead><TableHead>نوع درخواست</TableHead><TableHead>تاریخ ثبت</TableHead><TableHead>وضعیت</TableHead><TableHead>عملیات</TableHead></TableRow></TableHeader>
                <TableBody>
                  {filteredApplicants.map((applicant) => (
                    <TableRow key={applicant.id}>
                      <TableCell><div className="font-medium">{applicant.studentName}</div><div className="text-sm text-muted-foreground">{applicant.email}</div></TableCell>
                      <TableCell>{applicant.nationality}</TableCell>
                      <TableCell>{applicant.applicationType}</TableCell>
                      <TableCell>{formatDate(applicant.submissionDate)}</TableCell>
                      <TableCell>{getStatusBadge(applicant.status)}</TableCell>
                      <TableCell>
                        <Button variant="outline" size="sm" onClick={() => onViewApplication(applicant.id)}>
                          <Eye className="w-4 h-4 ml-2" />
                          مشاهده جزئیات
                        </Button>
                      </TableCell>
                    </TableRow>
                  ))}
                </TableBody>
              </Table>
            </div>
          </CardContent>
        </Card>
    </div>
  );
}
// end of components/MyApplicants.tsx