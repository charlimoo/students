// start of components/CaseSearch.tsx
import React, { useState } from 'react';
import { Button } from './ui/button';
import { Input } from './ui/input';
import { Label } from './ui/label';
import { Badge } from './ui/badge';
import { Card, CardContent, CardHeader, CardTitle } from './ui/card';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from './ui/select';
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from './ui/table';
import { Avatar, AvatarFallback } from './ui/avatar';
import {
  Search,
  Eye,
  Calendar,
  Flag,
  RefreshCw,
  Building,
  Globe,
  CreditCard,
  UserSearch,
  Filter,
  FileSearch,
  User
} from 'lucide-react';

interface CaseSearchProps {
  onNavigate: (page: string) => void;
  onViewCase: (caseId: string) => void;
}

const mockSearchResults = [
  { id: 'APP-2024-001', studentName: 'علیرضا احمدی', trackingCode: 'TRK-2024-001', nationality: 'ایرانی', status: 'جدید', university: 'دانشگاه تهران', passportNumber: 'A1234567', submitDate: '2024-02-15' },
  { id: 'APP-2024-002', studentName: 'مریم کریمی', trackingCode: 'TRK-2024-002', nationality: 'افغانستانی', status: 'دارای نقص', university: 'دانشگاه صنعتی شریف', passportNumber: 'P1234567', submitDate: '2024-02-14' },
];

const getStatusBadge = (status: string) => { /* ... getStatusBadge implementation ... */ };

export function CaseSearch({ onNavigate, onViewCase }: CaseSearchProps) {
  const [searchCriteria, setSearchCriteria] = useState({ familyName: '', passportNumber: '', trackingCode: '', nationality: 'all', university: 'all' });
  const [searchResults, setSearchResults] = useState<any[]>([]);
  const [hasSearched, setHasSearched] = useState(false);
  const [isSearching, setIsSearching] = useState(false);

  const handleInputChange = (field: string, value: string) => setSearchCriteria(prev => ({ ...prev, [field]: value }));
  const handleSearch = async () => {
    setIsSearching(true); setHasSearched(true);
    await new Promise(resolve => setTimeout(resolve, 800));
    const filtered = mockSearchResults.filter(result => (
      (!searchCriteria.familyName || result.studentName.includes(searchCriteria.familyName)) &&
      (!searchCriteria.passportNumber || result.passportNumber.toLowerCase().includes(searchCriteria.passportNumber.toLowerCase())) &&
      (!searchCriteria.trackingCode || result.trackingCode.toLowerCase().includes(searchCriteria.trackingCode.toLowerCase())) &&
      (searchCriteria.nationality === 'all' || result.nationality === searchCriteria.nationality) &&
      (searchCriteria.university === 'all' || result.university === searchCriteria.university)
    ));
    setSearchResults(filtered);
    setIsSearching(false);
  };
  const formatDate = (dateString: string) => new Date(dateString).toLocaleDateString('fa-IR', { year: 'numeric', month: 'long', day: 'numeric' });
  const hasSearchCriteria = Object.values(searchCriteria).some(v => v && v !== 'all');

  return (
    <div className="flex-1 section-padding bg-muted/30">
      <div className="container-modern space-y-8">
        <Card className="card-modern">
          <CardHeader className="border-b border-border">
            <CardTitle className="flex items-center space-x-3 space-x-reverse">
              <div className="p-2 bg-blue-100 rounded-lg"><Filter className="w-5 h-5 text-blue-600" /></div>
              <span className="text-xl font-bold text-foreground persian-heading">معیارهای جستجو</span>
            </CardTitle>
          </CardHeader>
          <CardContent className="p-6">
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                <div className="space-y-2"><Label className="flex items-center space-x-2 space-x-reverse"><User className="w-4 h-4" /><span>نام خانوادگی</span></Label><Input placeholder="نام خانوادگی دانشجو..." value={searchCriteria.familyName} onChange={(e) => handleInputChange('familyName', e.target.value)} /></div>
                <div className="space-y-2"><Label className="flex items-center space-x-2 space-x-reverse"><CreditCard className="w-4 h-4" /><span>شماره پاسپورت</span></Label><Input placeholder="شماره پاسپورت..." value={searchCriteria.passportNumber} onChange={(e) => handleInputChange('passportNumber', e.target.value)} /></div>
                <div className="space-y-2"><Label className="flex items-center space-x-2 space-x-reverse"><FileSearch className="w-4 h-4" /><span>کد رهگیری</span></Label><Input placeholder="کد رهگیری پرونده..." value={searchCriteria.trackingCode} onChange={(e) => handleInputChange('trackingCode', e.target.value)} /></div>
                <div className="space-y-2"><Label className="flex items-center space-x-2 space-x-reverse"><Globe className="w-4 h-4" /><span>ملیت</span></Label><Select value={searchCriteria.nationality} onValueChange={(v) => handleInputChange('nationality', v)}><SelectTrigger><SelectValue /></SelectTrigger><SelectContent>{/* ... options ... */}</SelectContent></Select></div>
                <div className="space-y-2"><Label className="flex items-center space-x-2 space-x-reverse"><Building className="w-4 h-4" /><span>دانشگاه</span></Label><Select value={searchCriteria.university} onValueChange={(v) => handleInputChange('university', v)}><SelectTrigger><SelectValue /></SelectTrigger><SelectContent>{/* ... options ... */}</SelectContent></Select></div>
            </div>
            <div className="flex items-center justify-end mt-8 pt-6 border-t border-border">
              <Button onClick={handleSearch} disabled={!hasSearchCriteria || isSearching} className="flex items-center space-x-2 space-x-reverse">{isSearching ? <RefreshCw className="w-4 h-4 animate-spin" /> : <Search className="w-4 h-4" />}<span>{isSearching ? 'در حال جستجو...' : 'جستجو'}</span></Button>
            </div>
          </CardContent>
        </Card>

        {hasSearched && (
          <Card className="card-modern">
            <CardHeader className="border-b border-border">
                <CardTitle>نتایج جستجو ({searchResults.length} پرونده)</CardTitle>
            </CardHeader>
            <CardContent className="p-0">
              {searchResults.length === 0 ? <div className="text-center py-12"><p>پرونده‌ای یافت نشد.</p></div> : <div className="overflow-x-auto"><Table><TableHeader><TableRow><TableHead>نام دانشجو</TableHead><TableHead>کد رهگیری</TableHead><TableHead>تاریخ ثبت</TableHead><TableHead>وضعیت</TableHead><TableHead className="text-right">عملیات</TableHead></TableRow></TableHeader><TableBody>
                {searchResults.map((result) => (<TableRow key={result.id}><TableCell><div className="flex items-center space-x-3 space-x-reverse"><Avatar className="w-8 h-8"><AvatarFallback>{result.studentName.split(' ').map((n: string) => n[0]).join('')}</AvatarFallback></Avatar><span>{result.studentName}</span></div></TableCell><TableCell>{result.trackingCode}</TableCell><TableCell>{formatDate(result.submitDate)}</TableCell><TableCell>{getStatusBadge(result.status)}</TableCell><TableCell className="text-right"><Button size="sm" variant="outline" onClick={() => onViewCase(result.id)}><Eye className="w-4 h-4 ml-2" />مشاهده</Button></TableCell></TableRow>))}
              </TableBody></Table></div>}
            </CardContent>
          </Card>
        )}
      </div>
    </div>
  );
}
// end of components/CaseSearch.tsx