// start of components/PersianMyApplications.tsx
import React, { useState } from 'react';
import { Button } from './ui/button';
import { Card, CardContent, CardHeader, CardTitle } from './ui/card';
import { Badge } from './ui/badge';
import { Input } from './ui/input';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from './ui/select';
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from './ui/table';
import { ArrowRight, Search, Filter, Calendar, Download, Eye, FileText, GraduationCap } from 'lucide-react';
import { LanguageSwitcher } from './LanguageSwitcher';

interface PersianMyApplicationsProps {
  onBack: () => void;
  onViewApplication: (id: string) => void;
  onLanguageSwitch?: (language: 'english' | 'persian') => void;
}

// Mock applications data with Persian content
const mockApplications = [
  {
    id: 'persian-admission-001',
    type: 'درخواست پذیرش جدید',
    submissionDate: '۱۴۰۳/۰۸/۱۵',
    lastUpdate: '۱۴۰۳/۰۸/۲۰',
    status: 'approved',
    university: 'دانشگاه تهران',
    applicationNumber: 'ADM-2024-001'
  },
  {
    id: 'persian-visa-extension-002',
    type: 'تمدید ویزای دانشجویی',
    submissionDate: '۱۴۰۳/۰۸/۲۲',
    lastUpdate: '۱۴۰۳/۰۹/۰۱',
    status: 'under-review',
    university: 'دانشگاه صنعتی شریف',
    applicationNumber: 'VIS-2024-002'
  },
  {
    id: 'persian-general-003',
    type: 'درخواست مجوز کار پاره‌وقت',
    submissionDate: '۱۴۰۳/۰۷/۱۰',
    lastUpdate: '۱۴۰۳/۰۷/۲۵',
    status: 'requires-action',
    university: 'دانشگاه اصفهان',
    applicationNumber: 'WRK-2024-003'
  },
  {
    id: 'persian-complaint-004',
    type: 'شکایت خدماتی',
    submissionDate: '۱۴۰۳/۰۶/۰۵',
    lastUpdate: '۱۴۰۳/۰۶/۱۲',
    status: 'rejected',
    university: '—',
    applicationNumber: 'CMP-2024-004'
  },
  {
    id: 'persian-transfer-005',
    type: 'درخواست انتقال دانشگاه',
    submissionDate: '۱۴۰۳/۰۹/۰۱',
    lastUpdate: '۱۴۰۳/۰۹/۰۲',
    status: 'submitted',
    university: 'دانشگاه امیرکبیر',
    applicationNumber: 'TRF-2024-005'
  },
  {
    id: 'persian-scholarship-006',
    type: 'درخواست بورسیه تحصیلی',
    submissionDate: '۱۴۰۳/۰۵/۲۸',
    lastUpdate: '۱۴۰۳/۰۶/۱۵',
    status: 'approved',
    university: 'دانشگاه علم و صنعت',
    applicationNumber: 'SCH-2024-006'
  },
  {
    id: 'persian-internal-exit-007',
    type: 'درخواست خروج داخلی',
    submissionDate: '۱۴۰۳/۰۸/۱۰',
    lastUpdate: '۱۴۰۳/۰۸/۲۵',
    status: 'under-review',
    university: 'دانشگاه تهران → دانشگاه صنعتی شریف',
    applicationNumber: 'IEP-2024-007'
  },
  {
    id: 'persian-document-auth-008',
    type: 'درخواست تایید مدارک تحصیلی',
    submissionDate: '۱۴۰۳/۰۸/۰۵',
    lastUpdate: '۱۴۰۳/۰۸/۱۸',
    status: 'under-review',
    university: 'دانشگاه صنعتی امیرکبیر',
    applicationNumber: 'DOC-2024-008'
  }
];

// Status translation and styling
const getStatusBadge = (status: string) => {
  switch (status) {
    case 'approved':
      return <Badge className="status-badge-approved">تایید شده</Badge>;
    case 'under-review':
      return <Badge className="status-badge-review">در حال بررسی</Badge>;
    case 'requires-action':
      return <Badge className="status-badge-pending">نیازمند اقدام</Badge>;
    case 'rejected':
      return <Badge className="status-badge-rejected">رد شده</Badge>;
    case 'submitted':
      return <Badge className="bg-secondary text-secondary-foreground persian-text">ثبت شده</Badge>;
    default:
      return <Badge variant="secondary" className="persian-text">{status}</Badge>;
  }
};

// Status options for filtering
const statusOptions = [
  { value: 'all', label: 'همه وضعیت‌ها' },
  { value: 'approved', label: 'تایید شده' },
  { value: 'under-review', label: 'در حال بررسی' },
  { value: 'requires-action', label: 'نیازمند اقدام' },
  { value: 'rejected', label: 'رد شده' },
  { value: 'submitted', label: 'ثبت شده' }
];

// Application type options for filtering
const typeOptions = [
  { value: 'all', label: 'همه انواع درخواست' },
  { value: 'admission', label: 'درخواست پذیرش' },
  { value: 'visa', label: 'ویزا و تمدید' },
  { value: 'work-permit', label: 'مجوز کار' },
  { value: 'complaint', label: 'شکایت' },
  { value: 'transfer', label: 'انتقال دانشگاه' },
  { value: 'scholarship', label: 'بورسیه تحصیلی' }
];

export function PersianMyApplications({ onBack, onViewApplication, onLanguageSwitch }: PersianMyApplicationsProps) {
  const [searchTerm, setSearchTerm] = useState('');
  const [statusFilter, setStatusFilter] = useState('all');
  const [typeFilter, setTypeFilter] = useState('all');
  const [startDate, setStartDate] = useState('');
  const [endDate, setEndDate] = useState('');

  // Filter applications based on search and filters
  const filteredApplications = mockApplications.filter(app => {
    const matchesSearch = app.type.toLowerCase().includes(searchTerm.toLowerCase()) ||
                         app.applicationNumber.toLowerCase().includes(searchTerm.toLowerCase());
    const matchesStatus = statusFilter === 'all' || app.status === statusFilter;
    const matchesType = typeFilter === 'all' || 
                       (typeFilter === 'admission' && app.type.includes('پذیرش')) ||
                       (typeFilter === 'visa' && app.type.includes('ویزا')) ||
                       (typeFilter === 'work-permit' && app.type.includes('کار')) ||
                       (typeFilter === 'complaint' && app.type.includes('شکایت')) ||
                       (typeFilter === 'transfer' && app.type.includes('انتقال')) ||
                       (typeFilter === 'scholarship' && app.type.includes('بورسیه'));
    
    return matchesSearch && matchesStatus && matchesType;
  });

  const handleViewApplication = (id: string) => {
    // Ensure Persian applications navigate to Persian status page
    onViewApplication(id);
  };

  const handleExportData = () => {
    // Mock export functionality for PDF
    console.log('Exporting applications data to PDF:', filteredApplications);
    // In a real application, this would trigger a PDF download
    alert('فایل PDF در حال آماده‌سازی است...');
  };

  const handleClearFilters = () => {
    setSearchTerm('');
    setStatusFilter('all');
    setTypeFilter('all');
    setStartDate('');
    setEndDate('');
  };

  return (
    <div className="min-h-screen bg-background persian-text" dir="rtl">
      {/* Header */}
      <div className="border-b border-border bg-card">
        <div className="max-w-7xl mx-auto px-6 py-6">
          <button 
            onClick={onBack}
            className="flex items-center space-x-2 space-x-reverse text-primary hover:underline mb-6"
          >
            <ArrowRight className="w-4 h-4" />
            <span className="persian-text">بازگشت به داشبورد</span>
          </button>
          
          <div className="space-y-4 text-right">
            <h1 className="text-3xl text-foreground persian-heading">تمام درخواست‌های من</h1>
            <p className="text-muted-foreground persian-text">
              مشاهده، جستجو و مدیریت کامل درخواست‌های ارسالی خود
            </p>
          </div>
        </div>
      </div>

      <div className="max-w-7xl mx-auto px-6 py-8">
        {/* Summary Statistics */}
        <div className="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
          <Card className="card-modern">
            <CardContent className="p-6">
              <div className="flex items-center justify-between">
                <div className="text-right">
                  <p className="text-sm font-medium text-muted-foreground persian-text">کل درخواست‌ها</p>
                  <p className="text-2xl font-bold text-foreground">{mockApplications.length}</p>
                </div>
                <div className="w-12 h-12 bg-primary-50 rounded-lg flex items-center justify-center">
                  <FileText className="w-6 h-6 text-primary" />
                </div>
              </div>
            </CardContent>
          </Card>
          
          <Card className="card-modern">
            <CardContent className="p-6">
              <div className="flex items-center justify-between">
                <div className="text-right">
                  <p className="text-sm font-medium text-muted-foreground persian-text">تایید شده</p>
                  <p className="text-2xl font-bold text-success">
                    {mockApplications.filter(app => app.status === 'approved').length}
                  </p>
                </div>
                <div className="w-12 h-12 bg-success-50 rounded-lg flex items-center justify-center">
                  <GraduationCap className="w-6 h-6 text-success" />
                </div>
              </div>
            </CardContent>
          </Card>
          
          <Card className="card-modern">
            <CardContent className="p-6">
              <div className="flex items-center justify-between">
                <div className="text-right">
                  <p className="text-sm font-medium text-muted-foreground persian-text">در حال بررسی</p>
                  <p className="text-2xl font-bold text-primary">
                    {mockApplications.filter(app => app.status === 'under-review').length}
                  </p>
                </div>
                <div className="w-12 h-12 bg-primary-50 rounded-lg flex items-center justify-center">
                  <Eye className="w-6 h-6 text-primary" />
                </div>
              </div>
            </CardContent>
          </Card>
          
          <Card className="card-modern">
            <CardContent className="p-6">
              <div className="flex items-center justify-between">
                <div className="text-right">
                  <p className="text-sm font-medium text-muted-foreground persian-text">نیازمند اقدام</p>
                  <p className="text-2xl font-bold text-warning">
                    {mockApplications.filter(app => app.status === 'requires-action').length}
                  </p>
                </div>
                <div className="w-12 h-12 bg-warning-50 rounded-lg flex items-center justify-center">
                  <Filter className="w-6 h-6 text-warning" />
                </div>
              </div>
            </CardContent>
          </Card>
        </div>

        {/* Filters and Search */}
        <Card className="card-modern mb-8">
          <CardHeader>
            <CardTitle className="flex items-center space-x-2 space-x-reverse persian-heading">
              <Filter className="w-5 h-5 text-primary" />
              <span>جستجو و فیلتر</span>
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4">
              {/* Search */}
              <div className="relative">
                <Search className="absolute right-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-muted-foreground" />
                <Input
                  placeholder="جستجو در درخواست‌ها..."
                  className="pr-10 text-right persian-text"
                  dir="rtl"
                  value={searchTerm}
                  onChange={(e) => setSearchTerm(e.target.value)}
                />
              </div>

              {/* Status Filter */}
              <Select value={statusFilter} onValueChange={setStatusFilter}>
                <SelectTrigger className="text-right persian-text" dir="rtl">
                  <SelectValue placeholder="وضعیت" />
                </SelectTrigger>
                <SelectContent>
                  {statusOptions.map((option) => (
                    <SelectItem key={option.value} value={option.value} className="persian-text text-right">
                      {option.label}
                    </SelectItem>
                  ))}
                </SelectContent>
              </Select>

              {/* Type Filter */}
              <Select value={typeFilter} onValueChange={setTypeFilter}>
                <SelectTrigger className="text-right persian-text" dir="rtl">
                  <SelectValue placeholder="نوع درخواست" />
                </SelectTrigger>
                <SelectContent>
                  {typeOptions.map((option) => (
                    <SelectItem key={option.value} value={option.value} className="persian-text text-right">
                      {option.label}
                    </SelectItem>
                  ))}
                </SelectContent>
              </Select>

              {/* Date Range */}
              <div className="flex items-center space-x-2 space-x-reverse">
                <Input
                  type="date"
                  placeholder="از تاریخ"
                  className="text-right persian-text"
                  value={startDate}
                  onChange={(e) => setStartDate(e.target.value)}
                />
                <span className="text-muted-foreground persian-text">تا</span>
                <Input
                  type="date"
                  placeholder="تا تاریخ"
                  className="text-right persian-text"
                  value={endDate}
                  onChange={(e) => setEndDate(e.target.value)}
                />
              </div>

              {/* Clear Filters Button */}
              <Button 
                onClick={handleClearFilters}
                variant="outline" 
                className="persian-text"
              >
                <Filter className="w-4 h-4 ml-2" />
                پاک کردن فیلترها
              </Button>
            </div>
          </CardContent>
        </Card>

        {/* Applications Table */}
        <Card className="card-modern">
          <CardHeader>
            <div className="flex items-center justify-between">
              <CardTitle className="persian-heading">
                لیست درخواست‌ها ({filteredApplications.length} مورد)
              </CardTitle>
              <div className="flex items-center space-x-4 space-x-reverse">
                <Button
                  onClick={handleExportData}
                  variant="outline"
                  size="sm"
                  className="flex items-center space-x-2 space-x-reverse text-muted-foreground hover:text-primary border-border hover:border-primary/50 persian-text"
                >
                  <Download className="w-4 h-4" />
                  <span>خروجی PDF</span>
                </Button>
                <p className="text-sm text-muted-foreground persian-text">
                  آخرین بروزرسانی: ۱۴۰۳/۰۹/۰۲ - ۱۴:۳۰
                </p>
              </div>
            </div>
          </CardHeader>
          <CardContent className="p-0">
            <div className="overflow-x-auto">
              <Table>
                <TableHeader>
                  <TableRow className="border-b border-border hover:bg-transparent">
                    <TableHead className="font-semibold text-right persian-text min-w-[200px]">نوع درخواست</TableHead>
                    <TableHead className="font-semibold text-right persian-text min-w-[120px]">شماره درخواست</TableHead>
                    <TableHead className="font-semibold text-right persian-text min-w-[120px]">تاریخ ثبت</TableHead>
                    <TableHead className="font-semibold text-right persian-text min-w-[120px]">آخرین بروزرسانی</TableHead>
                    <TableHead className="font-semibold text-right persian-text min-w-[150px]">دانشگاه/مؤسسه</TableHead>
                    <TableHead className="font-semibold text-right persian-text min-w-[120px]">وضعیت</TableHead>
                    <TableHead className="text-right font-semibold persian-text min-w-[120px]">عملیات</TableHead>
                  </TableRow>
                </TableHeader>
                <TableBody>
                  {filteredApplications.length === 0 ? (
                    <TableRow>
                      <TableCell colSpan={7} className="text-center py-8">
                        <div className="space-y-2">
                          <FileText className="w-12 h-12 text-muted-foreground mx-auto" />
                          <p className="text-muted-foreground persian-text">
                            درخواستی با این معیارها یافت نشد
                          </p>
                        </div>
                      </TableCell>
                    </TableRow>
                  ) : (
                    filteredApplications.map((app) => (
                      <TableRow 
                        key={app.id} 
                        className="hover:bg-muted/50 transition-colors border-b border-border/50 last:border-b-0"
                      >
                        <TableCell className="font-medium py-4 text-right persian-text">
                          {app.type}
                        </TableCell>
                        <TableCell className="text-muted-foreground py-4 text-right persian-text">
                          {app.applicationNumber}
                        </TableCell>
                        <TableCell className="text-muted-foreground py-4 text-right persian-text">
                          {app.submissionDate}
                        </TableCell>
                        <TableCell className="text-muted-foreground py-4 text-right persian-text">
                          {app.lastUpdate}
                        </TableCell>
                        <TableCell className="text-muted-foreground py-4 text-right persian-text">
                          {app.university}
                        </TableCell>
                        <TableCell className="py-4 text-right">
                          {getStatusBadge(app.status)}
                        </TableCell>
                        <TableCell className="text-right py-4">
                          <Button
                            variant="outline"
                            size="sm"
                            onClick={() => handleViewApplication(app.id)}
                            className="text-primary border-primary/30 hover:bg-primary hover:text-primary-foreground persian-text"
                          >
                            <Eye className="w-4 h-4 ml-2" />
                            مشاهده جزئیات
                          </Button>
                        </TableCell>
                      </TableRow>
                    ))
                  )}
                </TableBody>
              </Table>
            </div>
          </CardContent>
        </Card>

        {/* Pagination would go here if needed */}
        {filteredApplications.length > 0 && (
          <div className="flex items-center justify-between mt-6">
            <p className="text-sm text-muted-foreground persian-text">
              نمایش {filteredApplications.length} از {mockApplications.length} درخواست
            </p>
            <div className="flex items-center space-x-2 space-x-reverse">
              <Button variant="outline" size="sm" disabled className="persian-text">
                قبلی
              </Button>
              <Button variant="outline" size="sm" disabled className="persian-text">
                بعدی
              </Button>
            </div>
          </div>
        )}

        {/* Language Switcher Footer */}
        {onLanguageSwitch && (
          <div className="mt-8 pt-6 border-t border-border/50">
            <div className="flex justify-center">
              <LanguageSwitcher
                currentLanguage="persian"
                onLanguageChange={onLanguageSwitch}
              />
            </div>
          </div>
        )}
      </div>
    </div>
  );
}
// end of components/PersianMyApplications.tsx